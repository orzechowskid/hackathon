services:
  db:
    build:
      context: ../db
    environment:
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASSWORD}
      - POSTGRES_DB=${PGDATABASE}
    image: alewife-pg
    ports:
      - ${PGPORT}:5432
    volumes:
      - "../db/create.sql:/docker-entrypoint-initdb.d/create_tables.sql"
      - "../db/storage/${ALEWIFE_ENV}:/var/lib/postgresql/data"

  backend:
    build:
      context: ../backend
      args:
        - GID=${GROUP_ID}
        - UID=${USER_ID}
    depends_on:
      - db
    environment:
      - DB_CONNECTION_STRING=postgres://${PGUSER}:${PGPASSWORD}@${CONTAINER_HOST_ADDR}:${PGPORT}/${PGDATABASE}
      - JWT_SECRET=${BACKEND_JWT_SECRET}
      - NODE_NAME=${NODE_LOCATION}
      - PORT=${BACKEND_PORT}
      - USER_NAME
    extra_hosts:
      - ${CONTAINER_HOST_ADDR}:host-gateway
    image: alewife-backend
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}

  frontend:
    build:
      context: ../frontend
      args:
        - GID=${GROUP_ID}
        - UID=${USER_ID}
    depends_on:
      - backend
    environment:
      - NODE_ENV=production
      - NODE_NAME
      - PORT=${FRONTEND_PORT}
      - USER_NAME
    image: alewife-frontend
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}

  proxy-server:
    build:
      context: ./proxy-server
    depends_on:
      - backend
      - frontend
    environment:
      - CONTAINER_HOST_ADDR
      - BACKEND_PORT
      - FRONTEND_PORT
      - NODE_NAME
      - PROXY_SERVER_HTTPS
    extra_hosts:
      - ${CONTAINER_HOST_ADDR}:host-gateway
    image: alewife-proxy-server
    ports:
      - ${PROXY_SERVER_HTTPS}:443
    volumes:
      - "./proxy-server/templates:/etc/nginx/templates"
      - "./fake-ca/domains:/etc/nginx/ssl/domains"
